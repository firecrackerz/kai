#library "c" libc

print :: (string, any..) -> void #foreign libc "printf"

// Program entry point
main :: () -> void {
    x := 8
    y := &x

    *y = 123

    z := (u64)(x)
    j := (^i64)(y)

    test := "Hey, dude!\n"
    testPtr := &test

    print(*testPtr)

    *testPtr = "I got changed ðŸ‘®\n"

    print(*testPtr)

    print("y: %d\n", *y)
    print("j: %d\n", *j)

    // will segfault
    j = nil
    //print("j: %d\n", *j)

    // Nested procedure
    foo :: (n: int) -> void {
        n += 5
        print("foo printing %d\n", n)
        n = 4
        print("foo printing %d\n", n)
    }

    n := 5
    foo(n)

    print("main printing %d\n", n)
}

