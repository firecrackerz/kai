#library "c" libc

sockaddr_in :: struct {
   sin_len: u8
   sa_family_t: u8
   sin_port_t: u16 
   sin_addr: u32
   sin_zero: [8]i8 
}

AF_INET : u8 = 2
SOCK_STREAM : u32 = 1

_socket :: (u32, u32, u32) -> i32 #foreign libc "socket"
_bind :: (u32, *sockaddr_in, u64) -> i32 #foreign libc "bind"
_listen :: (u32, i32) -> i32 #foreign libc "listen"
_close :: (u32) -> u32 #foreign libc "close" 
_read :: (u32, *i8, i64) -> i64 #foreign libc "read"
_write :: (u32, string, i32) -> i64 #foreign libc "write"

socket_init :: () -> u32, int {
    result := _socket(u32(AF_INET), SOCK_STREAM, 0)
    
    return u32(result), 0
}


a :: () -> Int {
    return 100
}

main :: () -> void {
   b : *(() -> Int) = &a
}
