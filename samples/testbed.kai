#library "c" libc

len :: (str: string) -> u64 {
    return <(*u64)(&str[-16])
}

cap :: (str: string) -> u64 {
    return <(*u64)(&str[-8])
}

uppercase :: (str: string) -> void {
    length := len(str)

    for i := 0; i < length; i += 1 {
        str[i] = str[i] & 0xDF
    }
}

lowercase :: (str: string) -> void {
    length := len(str)

    for i := 0; i < length; i += 1 {
        str[i] = str[i] | 0x20
    }
}

test :: () -> ^u64 {
    return nil
}

main :: () -> void {
    name := "BrETT"
    lowercase(name)

    testResult := test()
    if testResult {
        printf("It wasn't null: %d\n", <(*u64)(testResult))
    }

    printf("%s (length: %llu, capacity: %llu)\n", name, len(name), cap(name))

}
