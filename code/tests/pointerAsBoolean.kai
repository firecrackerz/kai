
#library "libc"

#foreign libc #callconv "c" {
    printf :: (fmt: *u8, args: #cvargs ..any) -> i32
}

main :: fn() -> void {

    u: u64
    ptr: rawptr = &u

    if !ptr printf("ERROR: if !ptr then executed!\n".raw)
    else printf("correct!\n".raw)

    nilPtr : rawptr = nil
    if nilPtr printf("ERROR: if nilPtr then executed\n".raw)
    printf("nilPtr ?: ptr = %p (correct if value looks like a stack pointer)\n".raw, nilPtr ?: ptr)

    if ptr printf("correct!\n".raw)

    for ptr {
        printf("correct!\n".raw)
        ptr = nil
    }
}

