
#test "enum auto incrementing" {
    Foo :: enum(u32) {
        v0
        v1
        v78 :: 78
        v79
        v20 :: 20
        v21
    }

    assert(cast(u32) Foo.v0  ==  0)
    assert(cast(u32) Foo.v1  ==  1)
    assert(cast(u32) Foo.v78 == 78)
    assert(cast(u32) Foo.v79 == 79)
    assert(cast(u32) Foo.v20 == 20)
    assert(cast(u32) Foo.v21 == 21)
}

#test "enum #flags auto incrementing" {
    Foo :: enum(u32) #flags {
        v1   // 1 << 0
        v2   // 1 << 1
        v4   // 1 << 2
        v8   // 1 << 3
        v64  :: 1 << 6
        v128 // 1 << 7
        v16  :: 1 << 4
        v32  // 1 << 5
    }

    assert(cast(u32) Foo.v1   == 1)
    assert(cast(u32) Foo.v2   == 2)
    assert(cast(u32) Foo.v4   == 4)
    assert(cast(u32) Foo.v8   == 8)
    assert(cast(u32) Foo.v16  == 16)
    assert(cast(u32) Foo.v32  == 32)
    assert(cast(u32) Foo.v64  == 64)
    assert(cast(u32) Foo.v128 == 128)
}
